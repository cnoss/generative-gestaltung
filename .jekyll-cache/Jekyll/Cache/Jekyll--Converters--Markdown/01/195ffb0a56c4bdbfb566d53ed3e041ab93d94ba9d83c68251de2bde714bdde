I"©<h2 id="l1-raster-aus-vertikalen-linien">L1 Raster aus vertikalen Linien</h2>
<p>Erzeugen Sie aus beliebig vielen vertikalen Linien ein Raster und zentrieren Sie die Formation im Format. Die Anzahl der Linien sollte mit einem Slider einstellbar sein. Die Linienposition auf der Y-Achse ist fix, die Position auf der X-Achse soll via Slider variert werden k√∂nnen. Varieren Sie weitere Parameter.</p>

<h2 id="l11-raster-aus-vertikalen-linienstr√§ngen">L1.1 Raster aus vertikalen Linienstr√§ngen</h2>
<p>Unterteilen Sie die Darstellungsfl√§che in mehere Reihen und f√ºllen Sie die einzelnen Reihen mit vertikalen Linien. Die Abst√§nde zwischen den Linien sollten in den verschiedenen Reihen unterschiedlich sein.</p>

<h2 id="l12-raster-wird-nach-au√üen-dunkler">L1.2 Raster wird nach au√üen dunkler</h2>
<p>Wie zuvor, aber diesmal koppeln wir die Helligkeit an die X-Position des Elements, d.h. je weiter das Element von der Mitte entfernt ist, desto dunkler wird es dargestellt. Die Linienanf√§nge haben einen Bezug zu den Linienenden der vorhergehenden Reihe.</p>

<h2 id="l13-raster-wird-nach-au√üen-dunkler-variante">L1.3 Raster wird nach au√üen dunkler, Variante</h2>
<p>Wie zuvor, aber diesmal koppeln wir die Helligkeit an die X-Position des Elements, d.h. je weiter das Element von der Mitte entfernt ist, desto dunkler wird es dargestellt. Die Linienanf√§nge haben keinen Bezug zu den Linienenden der vorhergehenden Reihe.</p>

<h2 id="l14-√ºberlagerung">L1.4 √úberlagerung</h2>
<p>Wir erzeugen zwei Linienraster und verdrehen diese gegeneinander via Slider.</p>

<h2 id="l15-√ºberlagerung-f√ºr-gro√üe">L1.5 √úberlagerung f√ºr Gro√üe</h2>
<p>Wir erzeugen viele Linienraster und verdrehen diese gegeneinander via Slider. Mit einem Tastendruck soll stets ein weiteres Raster addiert werden.</p>

<p>Hier k√∂nnte zum ersten Mal eine Klasse hilfreich sein. Die entsprechende Klasse k√∂nnte in Javascript wie folgt implementiert werden:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class Grid {
  constructor( angle ) { 
    this.angle = angle;
  }
  show() { 
    translate(width / 2, height / 2);
    rotate(this.angle);
    translate(width / -2, height / -2);
    let distance = width / drawingParams.lines;
    for (let i = 0; i &lt; drawingParams.lines; i++) { 
      line(i * distance, 0, i * distance, height);
    }
  }
  edit(angle) { 
    this.angle = angle;
  }
}
</code></pre></div></div>

<p>In der <em>setup</em> Funktion und beim Dr√ºcken einer bestimmten Taste w√ºrde eine neue Instanz dieser Klasse einem Array zugef√ºgt:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let grids = [];
‚Ä¶
grids.push(new Grid(drawingParams.angle)); 
</code></pre></div></div>

<p>Und in der <em>Draw</em> Funktion wird das Array durchlaufen und die Darstellung getriggert:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>grids.forEach(
  (item, index) =&gt; { 
    item.show();
    lastGrid = index;
  }
);
</code></pre></div></div>

<h2 id="l16-angeschnittene-linienraster">L1.6 Angeschnittene Linienraster</h2>
<p>Erzeugen Sie zwei Linienraster mit horizontalen Linien verschiedener L√§nge. Ein Linienraster soll dabei links an der Zeichenfl√§che anschlagen, das andere rechts. Die L√§nge der Linien sollte variieren, so dass in der Mitte teilweise √úberschneidungen und teilweise Negativr√§ume entstehen.</p>
:ET